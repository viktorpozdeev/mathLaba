{"version":3,"sources":["options.js","math.js","canvas.js","Root.jsx","reportWebVitals.js","index.js"],"names":["options","time","gamma","delta","sX","sY","alpha","beta","multiplication","LodkaValterraFunc","x","y","minMax","data","type","min","max","forEach","el","value","buildLine","canvas","ctx","color","data2","color2","yMin","yMax","xMin","xMax","padding","size","width","height","dpiSize","viewHeight","step","textStep","Ky","Kx","current","style","beginPath","i","text","Math","round","strokeStyle","font","fillStyle","fillText","moveTo","lineTo","stroke","closePath","lineWidth","getName","Root","useState","setData","option","setOptions","useEffect","payload","dx","time2","push","useRef","getContext","ctx2","className","Object","keys","map","param","minWidth","onChange","prev","index","id","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34ad4b84.chunk.js","sourcesContent":["export const options = {\n  time: 100,\n  gamma: 0.2,\n  delta: 0.0025,\n  sX: 40,\n  sY: 50,\n  alpha: 0.1,\n  beta: 0.002,\n}\nexport const multiplication = {\n  time: 2,\n  gamma: 100,\n  delta: 10000,\n  sX: 1,\n  sY: 1,\n  beta: 10000,\n  alpha: 200,\n}","\nexport const LodkaValterraFunc = (x, y, options) => {\n  const { alpha, beta, gamma, delta } = options;\n  const dxDt = (alpha - beta * y) * x;\n  const dyDt = (-gamma + delta * x) * y;\n  return [dxDt, dyDt]\n}","\nfunction minMax(data, type) {\n  let min\n  let max\n  data?.forEach((el) => {\n    const value = type === 'y' ? el[1] : el[0];\n    if (typeof min !== 'number') min = value\n    if (typeof max !== 'number') max = value\n    if (min > value) min = value\n    if (max < value) max = value\n  })\n  return [min, max == `Infinity` ? 1000000 : max]\n}\n\nexport function buildLine(canvas, ctx, data, color, data2, color2) {\n  const [yMin, yMax] = minMax(data, 'y')\n  const [xMin, xMax] = minMax(data, 'x')\n  const padding = 40\n  const countLine = 5\n  const size = { width: 800, height: 350 }\n  const dpiSize = { width: size.width * 2, height: size.height * 2 }\n  const viewHeight = dpiSize.height - (padding * 2)\n  const step = viewHeight / countLine\n  const textStep = (yMax - yMin) / countLine\n  const deltaY = (yMax - yMin)\n  const deltaX = (xMax - xMin)\n  const Ky = viewHeight / deltaY\n  const Kx = dpiSize.width / deltaX\n  canvas.current.style.width = `${size?.width}px`\n  canvas.current.style.height = `${size?.height}px`\n  canvas.current.width = dpiSize?.width\n  canvas.current.height = dpiSize?.height\n\n  ctx.beginPath()\n  for (let i = 0; i <= countLine; i++) {\n    const y = step * i\n    const text = Math.round(yMax - textStep * i)\n    ctx.strokeStyle = '#8b90f7'\n    ctx.font = 'normal 30px sans-serif'\n    ctx.fillStyle = '#75001b'\n    ctx.fillText(text, 10, y + padding - 10)\n    ctx.moveTo(0, y + padding)\n    ctx.lineTo(dpiSize.width, y + padding)\n  }\n  ctx.stroke()\n  ctx.closePath()\n\n  ctx.beginPath()\n  ctx.lineWidth = 5;\n  ctx.strokeStyle = color\n\n  data?.forEach(([x, y]) => {\n    ctx.lineTo(x * Kx, dpiSize.height - (y * Ky + padding))\n  })\n  ctx.stroke()\n\n  ctx.beginPath()\n  ctx.lineWidth = 5;\n  ctx.strokeStyle = color2\n\n  if (data2) {\n    data2?.forEach(([x, y]) => {\n      ctx.lineTo(x * Kx, dpiSize.height - (y * Ky + padding))\n    })\n  }\n  ctx.stroke()\n  ctx.closePath()\n}\nexport const getName = (value) => {\n  switch (value) {\n    case `time`: return 'Время'\n    case `gamma`: return 'Гамма'\n    case `delta`: return 'Дельта'\n    case `sX`: return 'Начальное значение Х'\n    case `sY`: return 'Начальное значение У'\n    case `alpha`: return 'Хищники'\n    case `beta`: return 'Жертвы'\n  }\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './root.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css'\nimport * as option from './options'\nimport { LodkaValterraFunc } from './math'\nimport { buildLine,getName } from './canvas'\n\nfunction Root() {\n\n  const [data, setData] = useState({})\n  const [options, setOptions] = useState(option.options)\n  const multiplication = option.multiplication\n\n  useEffect(() => {\n    setData(() => {\n      const payload = {\n        dx: [],\n        time: [],\n        time2: [],\n      }\n      let x = options.sX;\n      let y = options.sY;\n      for (let i = 0; i < options.time; i++) {\n        payload.dx.push([x, y]);\n        payload.time2.push([i, x]);\n        payload.time.push([i, y]);\n        const [dx, dy] = LodkaValterraFunc(x, y, options);\n        x += dx;\n        y += dy;\n      }\n      return payload\n    })\n  }, [options])\n\n  let canvas = {}\n  canvas['1'] = useRef();\n  canvas['2'] = useRef();\n\n  useEffect(() => {\n    const ctx = canvas['1']?.current?.getContext('2d')\n    const ctx2 = canvas['2']?.current?.getContext('2d')\n    buildLine(canvas['1'], ctx, data.time, '#75001b', data.time2, '#ff7300')\n    buildLine(canvas['2'], ctx2, data.dx, '#000675')\n  }, [data])\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"appSignature title\">\n        Выполнил Поздеев Виктор: \"Модель Лодки-Вольтерры\". \n        </div>\n        <div className={`sliderBox`}>\n          {Object.keys(options).map((param) => {\n            if(param ==='sX' || param ==='sY') return\n            return(\n            <div className=\"btns_item\">\n              <div  className=\"btns_item-text\" style={{ minWidth: '60px' }}>\n                {param ==='beta' && <div className=\"circle beta\"></div>}\n                {param ==='alpha' && <div className=\"circle alpha\"></div>}\n                {getName(param)} : {options[param]}\n                </div>\n              <Slider\n                value={options[param] * multiplication[param]}\n                onChange={(data) => { setOptions(prev => ({ ...prev, [param]: data / multiplication[param] })) }}\n                min={param === 'time' ? 10 : 0}\n                max={param === 'time' ? 200 : 20}\n              />\n            </div>\n          )})}\n        </div>\n        <div className=\"graphics\">\n        {Object.keys(canvas).map((el, index) => (\n          <div className=\"container\">\n            <div className=\"card\">\n              <canvas id='canvas' ref={canvas[`${index + 1}`]} className={'canvas'} />\n            </div>\n          </div>\n        ))}\n        </div>\n        \n      </div>\n    </>\n\n  );\n}\n\nexport default Root;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}